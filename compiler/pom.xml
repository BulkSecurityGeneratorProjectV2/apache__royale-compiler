<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>falcon</artifactId>
        <groupId>org.apache.flex</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>compiler</artifactId>
    <name>Falcon Compiler</name>
    <description>The Falcon compiler</description>

    <properties>
        <javac.debug>true</javac.debug>
        <javac.deprecation>false</javac.deprecation>
    </properties>

    <packaging>pom</packaging>

    <build>
        <sourceDirectory>src</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>de.jflex</groupId>
                <artifactId>jflex-maven-plugin</artifactId>
                <version>1.5.0</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/generated/src</outputDirectory>
                    <skeleton>${project.build.sourceDirectory}/org/apache/flex/compiler/internal/parsing/as/skeleton.default</skeleton>
                </configuration>
                <executions>
                    <execution>
                        <id>raw.as.tokenizer</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <lexDefinitions>
                                <lexDefinition>${project.build.sourceDirectory}/org/apache/flex/compiler/internal/parsing/as/RawASTokenizer.lex</lexDefinition>
                            </lexDefinitions>
                            <skeleton>${project.build.sourceDirectory}/org/apache/flex/compiler/internal/parsing/as/skeleton.falcon</skeleton>
                        </configuration>
                    </execution>
                    <execution>
                        <id>raw.asdoc.tokenizer</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <lexDefinitions>
                                <lexDefinition>${project.build.sourceDirectory}/org/apache/flex/compiler/internal/parsing/as/RawASDocTokenizer.lex</lexDefinition>
                            </lexDefinitions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>raw.mxml.tokenizer</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <lexDefinitions>
                                <lexDefinition>${project.build.sourceDirectory}/org/apache/flex/compiler/internal/parsing/mxml/RawMXMLTokenizer.lex</lexDefinition>
                            </lexDefinitions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ANTLR -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>antlr-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <sourceDirectory>${project.build.sourceDirectory}/org/apache/flex/compiler/internal</sourceDirectory>
                    <outputDirectory>target/generated/src</outputDirectory>
                </configuration>
                <executions>
                    <!-- Generating ASParser and ASTokenTypes -->
                    <execution>
                        <id>as.parser</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <grammars>parsing/as/ASParser.g</grammars>
                        </configuration>
                        <!-- TODO ASParser.java annotate tool @SuppressWarnings("unused") -->
                        <!-- TODO ASTokenTypes.java annotate tool @SuppressWarnings("unused") -->
                    </execution>
                    <!-- Generating MetadataParser and MetadataTokenTypes -->
                    <execution>
                        <id>metadata.parser</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.build.sourceDirectory}/org/apache/flex/compiler/internal/parsing/as</sourceDirectory>
                            <grammars>MetadataParser.g</grammars>
                            <!--<includes>ImportMetadataTokenTypes.txt</includes>-->
                        </configuration>
                        <!-- TODO MetadataParser.java annotate tool @SuppressWarnings("all") -->
                        <!-- TODO MetadataTokenTypes.java annotate tool @SuppressWarnings("unused") -->
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.apache.flex.compiler.tools.AnnotateClass</mainClass>

                            <!--<argument>-classpath</argument>
                            <classpath>
                                <dependency>commons-io:commons-io</dependency>
                                <dependency>commons-lang:commons-lang</dependency>
                            </classpath>
                            <executable>maven</executable>
                            <workingDirectory>/tmp</workingDirectory>-->


                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.2</version>
                <configuration>
                    <sourceDirectory>${project.build.sourceDirectory}/org/apache/flex/compiler/internal</sourceDirectory>
                    <outputDirectory>target/generated/src</outputDirectory>
                </configuration>
                <executions>
                    <!-- Generating CSSLexer and CSSParser -->
                    <execution>
                        <id>css.lexer.and.parser</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>css/CSS.g</sourceDirectory>
                        </configuration>
                        <!-- TODO CSSLexer.java annotate tool @SuppressWarnings("unused") -->
                        <!-- TODO CSSParser.java annotate tool @SuppressWarnings("unused") -->
                    </execution>
                    <!-- Generating CSSTree -->
                    <execution>
                        <id>css.tree</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>css/CSSTree.g</sourceDirectory>
                        </configuration>
                        <!-- TODO CSSTree.java annotate tool @SuppressWarnings({"rawtypes", "unchecked", "unused"} -->
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.0-alpha-5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>generated/src/org/apache/flex/compiler/internal/parsing/as/ASParser.java</include>
                            </includes>
                            <factory>@SuppressWarnings("unused")</factory>

                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <!-- The AnnotateClass tool is used to add @SupressWarnings annotations to Java code produced by ANTLR and JBurg -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <debug>${javac.debug}</debug>
                    <showDeprecation>${javac.deprecation}</showDeprecation>
                    <compilerArgument>-Xlint:all,-path,-fallthrough</compilerArgument>
                    <source>tools/AnnotateClass</source>
                    <generatedSourcesDirectory>generated/classes</generatedSourcesDirectory>
                </configuration>
                <goals>
                    <goal>compile</goal>
                </goals>
            </plugin>-->
        </plugins>
    </build>

    <dependencies>
        <!-- antlr - http://www.antlr.org/download/antlr-4.2-complete.jar -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.2</version>
        </dependency>
        <!-- commons-cli - http://archive.apache.org/dist/commons/cli/binaries/commons-cli-1.2-bin.tar.gz -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- commons-io - http://archive.apache.org/dist/commons/io/binaries/commons-io-2.0.1-bin.tar.gz -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- guava - http://guava-libraries.googlecode.com/files/guava-r08.zip -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>r08</version>
        </dependency>
        <!-- JBurg - http://downloads.sourceforge.net/project/jburg/jburg-1.10.1.tar.gz (warning! this is not avaialbe publicly, I'm using a private maven repo for this one-->
        <dependency>
            <groupId>net.sourceforge</groupId>
            <artifactId>jburg</artifactId>
            <version>1.10.1</version>
        </dependency>
        <!-- lzma-sdk - http://downloads.sourceforge.net/project/sevenzip/LZMA%20SDK/lzma920.tar.bz2  -->
        <dependency>
            <groupId>com.github.jponge</groupId>
            <artifactId>lzma-java</artifactId>
            <version>1.2</version>
        </dependency>
    </dependencies>

</project>
