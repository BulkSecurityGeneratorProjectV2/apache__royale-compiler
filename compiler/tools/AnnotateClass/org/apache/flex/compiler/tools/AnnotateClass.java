/*
 *
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

package org.apache.flex.compiler.tools;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;

/**
 * The Java code generated by tools like ANTLR, JFlex, JBurg, etc.
 * often compiles with warnings that are difficult to eliminate
 * except by inserting <code>@SuppressWarnings(...)</code> annotations.
 * This tool is able to insert them as a post-processing step,
 * so that we don't have to modify the tools.
 * It inserts a specified annotation on the line
 * before the first public class or interface declaration.
 */
public class AnnotateClass
{
    /**
     * Command-line entry-point.
     * <p>
     * The first commend-line argument is the path
     * to the generated file to be postprocessed.
     * <p>
     * The second argument is the class annotation.
     * <p>
     * The new code is written to stdout.
     */
    public static void main(String[] args)
    {
        String path = args[0];
        String annotation = args[1];
                
        try
        {
            // Prepare to read the file.
            FileInputStream fileInputStream = new FileInputStream(path);
            InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);
            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
            try
            {
                // Read it line-by-line.
                String line;
                while ((line = bufferedReader.readLine()) != null)
                {
                    // If the line starts with "public class", output the
                    // @SuppressWarnings(...) annotation on the previous line.
                    if (line.startsWith("public class") || line.startsWith("public interface"))
                        System.out.println(annotation);
                     System.out.println(line);
                }
            }
            finally
            {
                bufferedReader.close();
            }
        }        
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }
}
