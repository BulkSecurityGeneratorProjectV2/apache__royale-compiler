////////////////////////////////////////////////////////////////////////////////
//
//  Licensed to the Apache Software Foundation (ASF) under one or more
//  contributor license agreements.  See the NOTICE file distributed with
//  this work for additional information regarding copyright ownership.
//  The ASF licenses this file to You under the Apache License, Version 2.0
//  (the "License"); you may not use this file except in compliance with
//  the License.  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////

void_expression = compoundAssignToName : 4
@Reduction reducer.generateCompoundAssignment(__p, operand, expr, opcode, DISCARD_VALUE);

expression = compoundAssignToName : 4
@Reduction reducer.generateCompoundAssignment(__p, operand, expr, opcode, NEED_VALUE);

void_expression = compoundAssignToMember : 4
@Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getproperty, opcode, DISCARD_VALUE);

expression = compoundAssignToMember : 4
@Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getproperty, opcode, NEED_VALUE);

expression = compoundAssignToBracket : 4
@Reduction reducer.generateCompoundBracketAssignment(__p, stem, index, expr, opcode, NEED_VALUE);

void_expression = compoundAssignToBracket : 4
@Reduction reducer.generateCompoundBracketAssignment(__p, stem, index, expr, opcode, DISCARD_VALUE);

void_expression = compoundAssignToDescendants : 4
@Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getdescendants, opcode, DISCARD_VALUE);

expression = compoundAssignToDescendants : 4
@Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getdescendants, opcode, NEED_VALUE);

void_expression = compoundAssignToRuntimeName : 4
@Reduction reducer.generateCompoundAssignmentToRuntimeName(__p, name, expr, opcode, DISCARD_VALUE);

expression = compoundAssignToRuntimeName : 4
@Reduction reducer.generateCompoundAssignmentToRuntimeName(__p, name, expr, opcode, NEED_VALUE);

