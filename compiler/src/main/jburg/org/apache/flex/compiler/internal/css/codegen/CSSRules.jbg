/*
 *
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

document = DOCUMENT (namespaceList namespaceList, fontFaceList fontFaceList, ruleList ruleList) : 1
@Reduction reducer.reduceDocument(__p, namespaceList, ruleList);

namespaceList = NAMESPACE_LIST (namespaceDefinition namespaces*) : 1
@Reduction reducer.reduceNamespaceList(__p, namespaces);

namespaceDefinition = NAMESPACE_DEFINITION (void) : 1
@Reduction reducer.reduceNamespaceDefinition(__p);

ruleList = RULE_LIST (rule rules*) : 1
@Reduction reducer.reduceRuleList(__p, rules);

rule = RULE (selectorGroup selectorGroup, mediaQuery mediaQuery, propertyList propertyList) : 1
@Reduction reducer.reduceRule(__p, selectorGroup, propertyList);

selectorGroup = SELECTOR_GROUP (selector selectors*) : 1
@Reduction reducer.reduceSelectorGroup(__p, selectors);

selector = SELECTOR (void) : 1
@Reduction reducer.reduceSelector(__p);

propertyList = PROPERTY_LIST (property properties*) : 1
@Reduction reducer.reducePropertyList(__p, properties);

property = PROPERTY (void) : 1
@Reduction reducer.reduceProperty(__p);

mediaQuery = MEDIA_QUERY (mediaQueryCondition conditions*) : 1
@Reduction reducer.reduceMediaQuery(__p, conditions);

mediaQueryCondition = MEDIA_QUERY_CONDITION (void) : 1
@Reduction reducer.reduceMediaQueryCondition(__p);

fontFaceList = FONT_FACE_LIST (fontFace fontFaces*) : 1
@Reduction reducer.reduceFontFaceList(__p, fontFaces);

fontFace = FONT_FACE (void) : 1
@Reduction reducer.reduceFontFace(__p);
